<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.capgemini.jtp.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.capgemini.jtp.entity.User">
        <id column="userId" property="userId"/>
        <result column="departId" property="departId"/>
        <result column="chineseName" property="chineseName"/>
        <result column="username" property="username"/>
        <result column="passWord" property="passWord"/>
    </resultMap>

    <resultMap id="lazyLoadRoles" type="com.capgemini.jtp.entity.User" extends="BaseResultMap">
        <collection property="roles" ofType="com.capgemini.jtp.entity.Role"
                    select="com.capgemini.jtp.mapper.UserMapper.getRolesByUserId"
                    column="userId"></collection>
    </resultMap>

<!--    <resultMap id="eagerLoadRoles" type="com.capgemini.jtp.entity.User" extends="BaseResultMap">-->
<!--        <collection property="roles" ofType="com.capgemini.jtp.entity.Role">-->
<!--            <id property="id" column="rid"/>-->
<!--            <result property="name" column="rname"/>-->
<!--            <result property="nameZh" column="rnameZh"/>-->
<!--        </collection>-->
<!--    </resultMap>-->

    <select id="loadUserByUsername" resultMap="lazyLoadRoles">
        select * from user WHERE username=#{username};
    </select>

<!--    <select id="loadUserByEmpId" resultMap="lazyLoadRoles">-->
<!--        select * from users WHERE empId=#{empId};-->
<!--    </select>-->

    <!-- 此方法待定 -->
    <select id="getRolesByUserId" resultType="com.capgemini.jtp.entity.Role">
        SELECT r.* FROM user u,role r where u.roleId=r.roleId AND u.userId=#{id}
    </select>

<!--    <insert id="userReg" parameterType="com.capgemini.jtp.vo.employee.request.UserEditVo">-->
<!--        INSERT INTO users set username=#{userEdit.username,jdbcType=VARCHAR},-->
<!--                           password=#{userEdit.password,jdbcType=VARCHAR},-->
<!--                           empId=#{userEdit.empId,jdbcType=BIGINT},-->
<!--                           name=#{userEdit.name,jdbcType=VARCHAR}-->
<!--    </insert>-->


<!--&lt;!&ndash;    此方法待定&ndash;&gt;-->
<!--    <select id="getUsersByKeywords" resultMap="eagerLoadRoles">-->
<!--        select h.*,`r`.`id` AS `rid`,`r`.`name` AS `rname`,`r`.`nameZh` AS `rnameZh` from ((`user` `h` left join `user_role`-->
<!--        `h_r` on ((`h`.`id` = `h_r`.`userid`))) left join `role` `r` on ((`h_r`.`rid` = `r`.`id`))) where h.`id` not-->
<!--        in(select h_r.`userid` from user_role h_r,role r where h_r.`rid`=r.`id` and r.`nameZh`='系统管理员')-->
<!--        <if test="keywords!='all' and keywords!=''">-->
<!--            and h.`name` like concat('%',#{keywords},'%')-->
<!--        </if>-->
<!--        order by h.`id` limit 10-->
<!--    </select>-->

<!--&lt;!&ndash;    待定&ndash;&gt;-->
<!--    <select id="getUserById" resultMap="eagerLoadRoles">-->
<!--        select h.*,`r`.`id` AS `rid`,`r`.`name` AS `rname`,`r`.`nameZh` AS `rnameZh` from ((`user` `h` left join `user_role`-->
<!--        `h_r` on ((`h`.`id` = `h_r`.`userid`))) left join `role` `r` on ((`h_r`.`rid` = `r`.`id`))) where h.`id`=#{userId}-->
<!--    </select>-->

<!--    <update id="updateUser" parameterType="com.capgemini.jtp.entity.User">-->
<!--        update users-->
<!--        <set>-->
<!--            <if test="user.name != null">-->
<!--                name = #{user.name,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="user.username != null">-->
<!--                username = #{user.username,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="user.password != null and user.password !='' ">-->
<!--                password = #{user.password,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--        </set>-->
<!--        where id = #{user.id,jdbcType=BIGINT}-->
<!--    </update>-->


<!--&lt;!&ndash;    待定&ndash;&gt;-->
<!--    <delete id="deleteRoleByUserId" parameterType="Long">-->
<!--        DELETE FROM user_role where userid=#{userId}-->
<!--    </delete>-->

<!--&lt;!&ndash;    待定&ndash;&gt;-->
<!--    <insert id="addRolesForUser" parameterType="Long">-->
<!--        INSERT INTO user_role(userid,rid) VALUES-->
<!--        <foreach collection="rids" separator="," item="rid">-->
<!--            (#{userId},#{rid})-->
<!--        </foreach>-->
<!--    </insert>-->

<!--&lt;!&ndash;    <delete id="deleteHr" parameterType="Long">&ndash;&gt;-->
<!--&lt;!&ndash;        DELETE FROM hr WHERE id=#{hrId}&ndash;&gt;-->
<!--&lt;!&ndash;    </delete>&ndash;&gt;-->

<!--    <select id="getAllUser" resultType="com.capgemini.jtp.entity.User">-->
<!--        select * from users-->
<!--        <if test="currentId!=null">-->
<!--            WHERE id !=#{currentId}-->
<!--        </if>-->
<!--    </select>-->

<!--    <select id="getRoleByUserId" resultType="Long">-->
<!--        select rid from user_role WHERE userid = #{id}-->
<!--    </select>-->

<!--    <select id="getEmpByEmpId" resultType="com.capgemini.jtp.entity.Employee">-->
<!--        select * from employee-->
<!--        where empId = #{empId} AND isDeleted = 0-->
<!--    </select>-->

<!--    <select id="getEmpIdById" resultType="Long">-->
<!--        select empId from users-->
<!--        where id = #{id}-->
<!--    </select>-->

<!--    <select id="listAllHr" resultType="com.capgemini.jtp.vo.employee.response.HrVo">-->
<!--        select id,name,username from hr-->
<!--        <if test="search.id != null">-->
<!--            where-->
<!--            id = #{search.id,jdbcType=BIGINT}-->
<!--        </if>-->
<!--        <if test="search.start != null and search.size != null">-->
<!--            order by id limit #{search.start},#{search.size}-->
<!--        </if>-->
<!--    </select>-->


<!--    <select id="countHr" resultType="Long">-->
<!--        select count(*) from hr-->
<!--        <if test="search.id != null">-->
<!--            where-->
<!--            id = #{search.id,jdbcType=BIGINT}-->
<!--        </if>-->
<!--    </select>-->
</mapper>